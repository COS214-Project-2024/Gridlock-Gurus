        -:    0:Source:C:/Users/rainb/Documents/GitHub/New/Gridlock-Gurus/src/TaxAuthority.cpp
        -:    0:Graph:C:\Users\rainb\Documents\GitHub\New\Gridlock-Gurus\cmake-build-debug-coverage\CMakeFiles\tests.dir\src\TaxAuthority.cpp.gcno
        -:    0:Data:C:\Users\rainb\Documents\GitHub\New\Gridlock-Gurus\cmake-build-debug-coverage\CMakeFiles\tests.dir\src\TaxAuthority.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "TaxAuthority.h"
        -:    2:#include "FlatTaxStrategy.h"
        -:    3:#include "ProgressiveTaxStrategy.h"
        -:    4:
function _ZN12TaxAuthorityC2Ev called 25 returned 100% blocks executed 61%
       25:    5:TaxAuthority::TaxAuthority(){
       25:    5-block  0
call    0 returned 25
call    1 returned 25
call    2 returned 25
       25:    6:    this->buildings = std::make_unique<BuildingCollection>();
call    0 returned 25
branch  1 taken 25 (fallthrough)
branch  2 taken 0 (throw)
       25:    6-block  0
call    3 returned 25
call    4 returned 25
    $$$$$:    6-block  1
       25:    7:    this->strategy = std::make_unique<FlatTaxStrategy>();
call    0 returned 25
branch  1 taken 25 (fallthrough)
branch  2 taken 0 (throw)
       25:    7-block  0
call    3 returned 25
call    4 returned 25
    $$$$$:    7-block  1
       25:    8:    this->collectedTax = 0;
       25:    9:}
    $$$$$:    9-block  0
call    0 never executed
    $$$$$:    9-block  1
call    1 never executed
    $$$$$:    9-block  2
call    2 never executed
        -:   10:
function _ZN12TaxAuthority16registerBuildingER8Building called 21 returned 100% blocks executed 100%
       21:   11:void TaxAuthority::registerBuilding(Building& building) {
       21:   12:    this->buildings->addBuilding(building);
       21:   12-block  0
call    0 returned 21
call    1 returned 21
       21:   13:}
        -:   14:
function _ZN12TaxAuthority15registerCitizenER7Citizen called 2 returned 100% blocks executed 100%
        2:   15:void TaxAuthority::registerCitizen(Citizen& citizen) {
        2:   16:    this->citizens.push_back(&citizen);
        2:   16-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   17:}
        2:   17-block  0
        -:   18:
function _ZN12TaxAuthority12collectTaxesEv called 2 returned 100% blocks executed 100%
        2:   19:int TaxAuthority::collectTaxes() {
        2:   20:    this->collectedTax = 0; // Reset the collected tax for the new cycle
        -:   21:    
        -:   22:    // Collect Taxes
        2:   23:    this->notifyBuildings();
        2:   23-block  0
call    0 returned 2
        2:   24:    this->notifyCitizens();
call    0 returned 2
        -:   25:
        2:   26:    return this->collectedTax;
        -:   27:}
        -:   28:
function _ZN12TaxAuthority14notifyCitizensEv called 2 returned 100% blocks executed 100%
        2:   29:void TaxAuthority::notifyCitizens() {
        6:   30:    for(auto c : this->citizens) {
        2:   30-block  0
call    0 returned 2
call    1 returned 2
        4:   30-block  1
call    2 returned 4
        4:   30-block  2
call    3 returned 4
        6:   30-block  3
call    4 returned 6
branch  5 taken 4
branch  6 taken 2 (fallthrough)
        4:   31:        c->payTaxes(calculateCitizenTax(c->getFunds()));
call    0 returned 4
call    1 returned 4
branch  2 taken 4 (fallthrough)
branch  3 taken 0 (throw)
        4:   31-block  0
call    4 returned 4
branch  5 taken 4 (fallthrough)
branch  6 taken 0 (throw)
        -:   32:    }
        2:   33:}
        2:   33-block  0
        -:   34:
function _ZN12TaxAuthority15notifyBuildingsEv called 2 returned 100% blocks executed 93%
        2:   35:void TaxAuthority::notifyBuildings() {
        2:   36:    int counter = 0;
        6:   37:    for(auto it = buildings->begin(); it != buildings->end(); ++it) {
        2:   37-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:   37-block  1
        4:   37-block  2
call    4 returned 4
branch  5 taken 4 (fallthrough)
branch  6 taken 0 (throw)
        6:   37-block  3
call    7 returned 6
call    8 returned 6
branch  9 taken 6 (fallthrough)
branch 10 taken 0 (throw)
        6:   37-block  4
call   11 returned 6
branch 12 taken 6 (fallthrough)
branch 13 taken 0 (throw)
        6:   37-block  5
branch 14 taken 4
branch 15 taken 2 (fallthrough)
    $$$$$:   37-block  6
        4:   38:        counter++;
        4:   39:        auto building = *it;
        4:   39-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   40:        building->payTax(calculateBuildingTax(building->getCost()));
        4:   40-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   40-block  1
call    3 returned 4
branch  4 taken 4 (fallthrough)
branch  5 taken 0 (throw)
        4:   40-block  2
call    6 returned 4
branch  7 taken 4 (fallthrough)
branch  8 taken 0 (throw)
        -:   41:    }
        2:   42:}
        2:   42-block  0
        -:   43:
function _ZN12TaxAuthority11setStrategyESt10unique_ptrI11TaxStrategySt14default_deleteIS1_EE called 1 returned 100% blocks executed 100%
        1:   44:void TaxAuthority::setStrategy(std::unique_ptr<TaxStrategy> taxStrategy) {
        1:   45:    this->strategy = std::move(taxStrategy);
        1:   45-block  0
call    0 returned 1
call    1 returned 1
        1:   46:}
        -:   47:
function _ZN12TaxAuthority20calculateBuildingTaxEi called 4 returned 100% blocks executed 100%
        4:   48:int TaxAuthority::calculateBuildingTax(int value) {
        4:   49:    return this->strategy->calculateBuildingTax(value);
        4:   49-block  0
call    0 returned 4
call    1 returned 4
        -:   50:}
        -:   51:
function _ZN12TaxAuthority19calculateCitizenTaxEi called 4 returned 100% blocks executed 100%
        4:   52:int TaxAuthority::calculateCitizenTax(int earnings) {
        4:   53:    return this->strategy->calculateCitizenTax(earnings);
        4:   53-block  0
call    0 returned 4
call    1 returned 4
        -:   54:}
        -:   55:
function _ZN12TaxAuthority7sendTaxEi called 11 returned 100% blocks executed 100%
       11:   56:void TaxAuthority::sendTax(int amount) {
       11:   57:    this->collectedTax += amount;
       11:   58:}
        -:   59:
function _ZN12TaxAuthority15getCollectedTaxEv called 3 returned 100% blocks executed 100%
        3:   60:int TaxAuthority::getCollectedTax() {
        3:   61:    return this->collectedTax;
        3:   61-block  0
        -:   62:}
        -:   63:
function _ZN12TaxAuthority7getSizeEv called 3 returned 100% blocks executed 100%
        3:   64:int TaxAuthority::getSize() {
        3:   65:    return this->buildings->getSize();
        3:   65-block  0
call    0 returned 3
call    1 returned 3
        -:   66:}
