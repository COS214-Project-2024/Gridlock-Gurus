        -:    0:Source:C:/Users/rainb/Documents/GitHub/New/Gridlock-Gurus/headers/FlatTaxStrategy.h
        -:    0:Graph:C:\Users\rainb\Documents\GitHub\New\Gridlock-Gurus\cmake-build-debug-coverage\CMakeFiles\tests.dir\src\FlatTaxStrategy.cpp.gcno
        -:    0:Data:C:\Users\rainb\Documents\GitHub\New\Gridlock-Gurus\cmake-build-debug-coverage\CMakeFiles\tests.dir\src\FlatTaxStrategy.cpp.gcda
        -:    0:Runs:1
        -:    1:#ifndef FLATTAXSTRATEGY_H
        -:    2:#define FLATTAXSTRATEGY_H
        -:    3:
        -:    4:#include "TaxStrategy.h"
        -:    5:
        -:    6:/**
        -:    7: * @brief Implements a flat tax strategy.
        -:    8: *
        -:    9: * ConcreteStrategy participant in the Strategy Design Pattern.
        -:   10: */
        -:   11:class FlatTaxStrategy : public TaxStrategy {
        -:   12:public:
        -:   13:    /**
        -:   14:     * @brief Constructor for the FlatTaxStrategy.
        -:   15:     */
        -:   16:    FlatTaxStrategy() = default;
        -:   17:
        -:   18:    
        -:   19:    /**
        -:   20:     * @brief Destructor for the FlatTaxStrategy.
        -:   21:     */
       50:   22:     ~FlatTaxStrategy() = default;
------------------
_ZN15FlatTaxStrategyD0Ev:
function _ZN15FlatTaxStrategyD0Ev called 25 returned 100% blocks executed 100%
       25:   22:     ~FlatTaxStrategy() = default;
       25:   22-block  0
call    0 returned 25
call    1 returned 25
------------------
_ZN15FlatTaxStrategyD1Ev:
function _ZN15FlatTaxStrategyD1Ev called 25 returned 100% blocks executed 100%
       25:   22:     ~FlatTaxStrategy() = default;
       25:   22-block  0
call    0 returned 25
------------------
        -:   23:
        -:   24:    /**
        -:   25:     * @brief Calculates tax on a building using the flat tax strategy.
        -:   26:     * @param value The value of the building.
        -:   27:     * @return Calculated building tax.
        -:   28:     *
        -:   29:     * This function acts as the algorithm() function.
        -:   30:     */
        -:   31:    int calculateBuildingTax(int value) override;
        -:   32:
        -:   33:    /**
        -:   34:     * @brief Calculates tax on a citizen's earnings using the flat tax strategy.
        -:   35:     * @param earnings The earnings of the citizen.
        -:   36:     * @return Calculated citizen tax.
        -:   37:     *
        -:   38:     * This function acts as the algorithm() function.
        -:   39:     */
        -:   40:    int calculateCitizenTax(int earnings) override;
        -:   41:};
        -:   42:
        -:   43:#endif // FLATTAXSTRATEGY_H
